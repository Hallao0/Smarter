题目描述：
输入两个链表，找出它们的第一个公共节点。

比如listA = [4,1,8,4,5], listB = [5,0,1,8,4,5]，相交于8

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

思路：双指针
链表 headA 和 headB 的长度分别是 m 和 n。假设链表 headA 的不相交部分有 a 个节点，链表 headB 的不相交部分有 b 个节点，两个链表相交的部分有 c 个节点，则有 a+c=m，b+c=n。

如果两个链表相交：
  如果 a=b，则两个指针会同时到达两个链表的第一个公共节点，此时返回两个链表的第一个公共节点；

  如果 a ！= b,则指针pA 会遍历完链表headA，指针 pB 会遍历完链表 headB，两个指针不会同时到达链表的尾节点，然后指针pA 移到链表 headB 的头节点，指针 pB 移到链表 headA 的头节点，
然后两个指针继续移动，在指针 pA 移动了 a+c+b次、指针 pB 移动了 b+c+a次之后，两个指针会同时到达两个链表的第一个公共节点，该节点也是两个指针第一次同时指向的节点，此时返回两个链表的第一个公共节点。

如果两个链表不相交：
  也就是c = 0, 看作是最后相交于null节点，不影响整体交换头的思路。
  
作者：LeetCode-Solution
链接：https://leetcode-cn.com/problems/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof/solution/liang-ge-lian-biao-de-di-yi-ge-gong-gong-pzbs/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。


solution:
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        ListNode pa = headA;
        ListNode pb = headB;
        while(pa != pb){
            pa = pa == null ? headB : pa.next;
            pb = pb == null ? headA : pb.next;
        }
        return pb;
    }
}

