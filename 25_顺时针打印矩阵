Description:

输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，例如，如果输入如下矩阵： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 则依次打印出数字1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.

0------->1 | | | | | | 3<-------2

leetcode: 54, 59
https://leetcode-cn.com/problems/shun-shi-zhen-da-yin-ju-zhen-lcof/submissions/

思路： 需要控制出现 单列 或者 单行 的情况 顺序打印矩阵，声明left,right,top,bottom变量，控制循环条件 会出现只有从左到右，没有从右到左的矩阵，也会出现只有从上到下，没有从下到上的矩阵，注意边界条件控制

Solution:
class Solution {
    public int[] spiralOrder(int[][] matrix) {
        if(matrix.length == 0) return new int[0];
        int rows = matrix.length;
        int cols = matrix[0].length;
        int[] result = new int[rows*cols];
        int index = 0;
        //define bian jie
        int left = 0;
        int right = cols - 1;
        int up = 0;
        int down = rows - 1;
        //loop
        while(left <= right && up <= down){
            for(int i = left; i <= right; i++){
                result[index++] = matrix[up][i];
            }
            up++;

            for(int i = up; i <= down; i++ ){
                result[index++] = matrix[i][right];
            }
            right--;

            if(up <= down)
            
            for(int i = right; i >= left; i--){
                result[index++] = matrix[down][i];
            }
            }
            down--;
            
            if(left <= right){
            for(int i = down; i >= up; i--){
                result[index++] = matrix[i][left];
            }
            }
            left++;

        }
        return result;
        
    }
}

总结：
1. while 大循环条件
2. line 37，line 45
if(up <= down)
if(left <= right)
不然会有数组越界问题
