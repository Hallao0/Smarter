题目描述：
一个长度为n-1的递增排序数组中的所有数字都是唯一的，并且每个数字都在范围0～n-1之内。在范围0～n-1内的n个数字中有且只有一个数字不在该数组中，请找出这个数字。
示例 1:

输入: [0,1,3]
输出: 2
示例 2:

输入: [0,1,2,3,4,5,6,7,9]
输出: 8
 

限制：

1 <= 数组长度 <= 10000

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/que-shi-de-shu-zi-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。


思路： 这道题有点小坑在于题目没有明确说 没有缺失数字的情况如何处理，比如[0,1] return 2;  [0,1,2] return 3; 一开始还以为是如果没有缺失值，就返回length的意思，但其实是while( i <= j)就行，
上一题是while(i < j), 同样是二分法，边界值处理需要具体情况具体分析

solution:
class Solution {
    public int missingNumber(int[] nums) {
        
        int i = 0;
        int j = nums.length - 1;
        while(i <= j){
            int mid = i + (j - i) / 2;
            if(nums[mid] == mid){
                i = mid + 1;
            }else{
                j = mid - 1;
            }
        }
        return i;
    }
}
