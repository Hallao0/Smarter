Description:

请实现两个函数，分别用来序列化和反序列化二叉树

leetcode: 297
https://leetcode-cn.com/problems/xu-lie-hua-er-cha-shu-lcof/

思路：1.参考的github上面的答案是用的dfs，结果报错时间超时。2.所以看答案用bfs,才不会超时。

Solution 1 （超时）:
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Codec {

    // Encodes a tree to a single string.
    public String serialize(TreeNode root) {
        if(root == null) return "null";
        return root.val + "," + serialize(root.left) + "," + serialize(root.right);       
    }

    // Decodes your encoded data to tree.
    int index = -1;
    public TreeNode deserialize(String data) {
        index++;
        String[] strs = data.split(",");
        TreeNode node = null;
        if(!"null".equals(strs[index])){
            node = new TreeNode(Integer.valueOf(strs[index]));
            node.left = deserialize(data);
            node.right = deserialize(data);
        }
        return node;
    }
}

// Your Codec object will be instantiated and called as such:
// Codec codec = new Codec();
// codec.deserialize(codec.serialize(root));
