
https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/



solution:

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if(root == null){
            return result;
        }
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        queue.offer(root);
        boolean reverse = true;

        while(!queue.isEmpty()){
            int size = queue.size();
            List<Integer> mid_result = new ArrayList<>();
            for(int i = 0; i < size; i++){
                TreeNode node = queue.poll();
                if(!reverse){
                    mid_result.add(0,node.val);
                }else{
                    mid_result.add(node.val);
                }

                if(node.left != null) queue.offer(node.left);
                if(node.right != null) queue.offer(node.right);

            }
            if(reverse == true){
                reverse = false;
            }else{
                reverse = true;
            }
            result.add(new ArrayList<>(mid_result));
        }
        return result;



    }
}

=====================================
总结
mid_result.add(0,node.val);
